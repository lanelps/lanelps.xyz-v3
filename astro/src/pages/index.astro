---
import { sanityClient } from "sanity:client";

import Layout from "@layouts/Layout.astro";
import FeaturedProjects from "@components/FeaturedProjects.svelte";
import SanityImage from "@components/SanityImage.astro";
import MuxVideo from "@components/MuxVideo.svelte";

import { feturedProjectsQuery } from "@utils/queires";
import type { Project } from "../types";

const projects: Project[] = await sanityClient.fetch(feturedProjectsQuery);

const layoutClasses = {
  full: {
    wrapper: "col-span-full",
    content: "w-full h-full object-contain sm-t:object-cover",
  },
  center: {
    wrapper:
      "col-span-full px-[8.89vw] sm-t:px-0 sm-t:col-start-2 sm-t:col-span-3",
    content: "object-contain mt-[50%] -translate-y-1/2",
  },
  left: {
    wrapper: "pr-[17.78vw] sm-t:pr-0 col-span-4",
    content: "h-full object-contain",
  },
  right: {
    wrapper: "col-start-2 col-span-full",
    content: "h-full object-contain",
  },
};
---

<Layout>
  <FeaturedProjects projects={projects} client:load>
    {
      projects.map((project) => (
        <li class="text-b2 relative h-full w-full">
          <div class="grid-main h-full w-full">
            {project.cover.type === "image" && (
              <SanityImage
                image={project.cover.image}
                class={layoutClasses[project.cover.layout]}
              />
            )}
            {project.cover.type === "video" && (
              <MuxVideo
                client:load
                video={project.cover.video}
                class={layoutClasses[project.cover.layout].wrapper}
                imgClass={layoutClasses[project.cover.layout].content}
              />
            )}
          </div>
        </li>
      ))
    }
  </FeaturedProjects>
</Layout>
