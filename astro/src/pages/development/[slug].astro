---
import { sanityClient } from "sanity:client";

import Layout from "@layouts/Layout.astro";

import InfoButton from "@components/InfoButton.svelte";
import SanityImage from "@components/SanityImage.astro";
import CloudinaryVideo from "@components/CloudinaryVideo.astro";
import ProjectInfo from "@components/ProjectInfo.svelte";
import RichText from "@components/RichText.astro";

import { projectsQuery } from "@utils/queires";

import type { Project } from "../../types";

export async function getStaticPaths() {
  const projects: Project[] = await sanityClient.fetch(projectsQuery);

  return projects.map((project) => {
    return {
      params: { slug: project.slug.current },
      props: { project },
    };
  });
}

const { title, description, categories, collaborators, software, gallery } =
  Astro.props.project;

const layoutClasses = {
  full: "col-span-full object-cover",
  center:
    "col-span-full px-[8.89vw] sm-t:px-0 sm-t:col-start-2 sm-t:col-span-3 !object-contain",
  left: "pr-[17.78vw] sm-t:pr-0 col-span-4",
  right: "col-start-2 col-span-full",
};
---

<Layout logoActive>
  <header class="mt-logo text-h1 relative z-50 mix-blend-difference">
    <h1 class="inline text-grey-invert">{title}</h1>
    <InfoButton client:load />
  </header>

  <ul
    class="absolute inset-0 h-full w-full snap-y snap-mandatory overflow-y-scroll"
  >
    {
      gallery.map((item) => {
        const layoutClass = layoutClasses[item.layout] || "";

        return (
          <li class="grid-main h-full w-full snap-center">
            {item.type === "image" && (
              <SanityImage image={item.image} class={layoutClass} />
            )}
            {item.type === "video" && (
              <CloudinaryVideo video={item.video} class={layoutClass} />
            )}
          </li>
        );
      })
    }
  </ul>

  <ProjectInfo
    client:load
    categories={categories}
    collaborators={collaborators}
    software={software}
  >
    <RichText value={description} />
  </ProjectInfo>
</Layout>
