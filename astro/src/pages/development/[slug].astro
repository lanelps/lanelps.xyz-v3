---
import { sanityClient } from "sanity:client";

import Layout from "@layouts/Layout.astro";

import SanityImage from "@components/SanityImage.astro";
import CloudinaryVideo from "@components/CloudinaryVideo.astro";
import ProjectInfo from "@components/ProjectInfo.astro";
import RichText from "@components/RichText.astro";

import { projectsQuery } from "@utils/queires";

import type { Project } from "../../types";

export async function getStaticPaths() {
  const projects: Project[] = await sanityClient.fetch(projectsQuery);

  return projects.map((project) => {
    return {
      params: { slug: project.slug.current },
      props: { project },
    };
  });
}

const {
  title,
  description,
  categories,
  collaborators,
  software,
  gallery,
  seo,
} = Astro.props.project;

const layoutClasses = {
  full: "col-span-full",
  center: "col-span-full sm-t:col-start-2 sm-t:col-span-3",
  left: "col-span-full sm-t:col-span-4",
  right: "sm-t:col-start-2 col-span-full",
};

const pageSEO = {
  title: seo?.title || title,
  description: seo?.description,
  keywords: seo?.keywords,
  image: seo?.image?.url,
};
---

<Layout logoActive seo={pageSEO}>
  <ProjectInfo
    categories={categories}
    collaborators={collaborators}
    software={software}
  >
    <RichText value={description} />
  </ProjectInfo>

  <header
    id="project-header"
    class="mt-logo text-h1 relative z-50 mix-blend-difference"
  >
    <h1 class="inline text-grey-invert">{title}</h1>
    <a id="info-open" href="#info" class="text-dark-grey-invert">Info</a>
    <a id="info-close" href="##" class="hidden text-dark-grey-invert">Close</a>
  </header>

  <ul
    class="fixed inset-0 flex h-dvh w-dvw snap-y snap-mandatory flex-col overflow-y-scroll scroll-smooth"
  >
    {
      gallery.map((item) => {
        const layoutClass = layoutClasses[item.layout] || "";

        return (
          <li class="grid-main relative h-full w-full shrink-0 snap-center snap-always overflow-hidden">
            <div class:list={["h-full max-h-dvh w-full", layoutClass]}>
              {item.type === "image" && (
                <SanityImage
                  image={item.image}
                  class={item.layout !== "full" && "sm-t:object-contain"}
                />
              )}
              {item.type === "video" && (
                <CloudinaryVideo
                  video={item.video}
                  class={item.layout !== "full" && "sm-t:object-contain"}
                />
              )}
            </div>
          </li>
        );
      })
    }
  </ul>
</Layout>
